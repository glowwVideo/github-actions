name: 'Deploy slack notification'
description: 'Send slack notification with deployment results'
# In order for this to work correctly, the action should have a condition to run also if job failed:
# ```
# - uses: glowwVideo/github-actions/deploy-slack-notification@master
#   if: ${{ always() && github.event_name != 'pull_request' }}
#   with:
#     slack-webhook: '${{ secrets.SLACK_DEPLOY_WEBHOOK }}'
#     deploy-target: '<ENVIRONMENT-NAME>'
# ```

inputs:
  slack-webhook:
    description: 'Webhook for slack notifications'
    required: true
  deploy-target:
    description: 'Deploy target name'
    required: true
  always-notify:
    description: 'If true, notification will always be sent. If false, will be send only on job.status == "failure"'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Echo input
      shell: bash
      run: |-
        echo "deploy-target: ${{ inputs.deploy-target }}, always-notify: ${{ inputs.always-notify }}"

    - name: expose some values to environment
      shell: bash
      run: |
        echo "ACTION_URL=`echo $GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID`" >> $GITHUB_ENV
        if [[ '${{ job.status }}' == 'success' ]]; then
              echo "DEPLOY_MESSAGE_ALT=:100: Deploy of $GITHUB_REPOSITORY to ${{ inputs.deploy-target }} environment, finished succesfully" >> $GITHUB_ENV
              echo "DEPLOY_MESSAGE=:100: Deploy of *$GITHUB_REPOSITORY* to *${{ inputs.deploy-target }}* environment, finished succesfully" >> $GITHUB_ENV
          else
              echo "DEPLOY_MESSAGE_ALT=:Boom: Deploy of $GITHUB_REPOSITORY to ${{ inputs.deploy-target }} environment, failed!!!!" >> $GITHUB_ENV
              echo "DEPLOY_MESSAGE=:Boom: Deploy of *$GITHUB_REPOSITORY* to *${{ inputs.deploy-target }}* environment, failed!!!!" >> $GITHUB_ENV
        fi
        echo "${{ env.DEPLOY_MESSAGE }}"

    - if: ${{ job.status == 'failure' || inputs.always-notify == 'true' || inputs.always-notify == true }}
      name: Send slack notification
      uses: slackapi/slack-github-action@v1.18.0
      with:
        payload: |
          {
            "text": "${{ env.DEPLOY_MESSAGE_ALT }}",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "${{ env.DEPLOY_MESSAGE }}"
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "actions",
                "elements": [
                  {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "Github action"
                    },
                    "url": "${{ env.ACTION_URL }}"
                  }
                ]
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: '${{ inputs.slack-webhook }}'
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

